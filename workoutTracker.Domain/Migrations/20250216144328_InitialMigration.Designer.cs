// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using workoutTracker.Domain.DatabaseContext;

#nullable disable

namespace workoutTracker.Domain.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250216144328_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("workoutTracker.Domain.Models.Application.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Exercise");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a7b067b-549e-4e6a-9d57-5f6735e4f88f"),
                            Description = "",
                            Instructions = "",
                            Name = "Bench Press (Paused)"
                        },
                        new
                        {
                            Id = new Guid("6bdc7a80-8bfa-4b8e-bbe4-0b5597279071"),
                            Description = "",
                            Instructions = "",
                            Name = "Low Bar Squat"
                        },
                        new
                        {
                            Id = new Guid("7c9e6679-7425-40de-944b-e07fc1f90ae7"),
                            Description = "",
                            Instructions = "",
                            Name = "Conventional Deadlift"
                        });
                });

            modelBuilder.Entity("workoutTracker.Domain.Models.Application.ExerciseTag", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TagId")
                        .HasColumnType("TEXT");

                    b.HasKey("ExerciseId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ExerciseTag");

                    b.HasData(
                        new
                        {
                            ExerciseId = new Guid("4a7b067b-549e-4e6a-9d57-5f6735e4f88f"),
                            TagId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd68")
                        },
                        new
                        {
                            ExerciseId = new Guid("4a7b067b-549e-4e6a-9d57-5f6735e4f88f"),
                            TagId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd6d")
                        },
                        new
                        {
                            ExerciseId = new Guid("4a7b067b-549e-4e6a-9d57-5f6735e4f88f"),
                            TagId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd64")
                        },
                        new
                        {
                            ExerciseId = new Guid("4a7b067b-549e-4e6a-9d57-5f6735e4f88f"),
                            TagId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd5f")
                        },
                        new
                        {
                            ExerciseId = new Guid("4a7b067b-549e-4e6a-9d57-5f6735e4f88f"),
                            TagId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd65")
                        },
                        new
                        {
                            ExerciseId = new Guid("4a7b067b-549e-4e6a-9d57-5f6735e4f88f"),
                            TagId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd63")
                        },
                        new
                        {
                            ExerciseId = new Guid("6bdc7a80-8bfa-4b8e-bbe4-0b5597279071"),
                            TagId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd69")
                        },
                        new
                        {
                            ExerciseId = new Guid("6bdc7a80-8bfa-4b8e-bbe4-0b5597279071"),
                            TagId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd65")
                        },
                        new
                        {
                            ExerciseId = new Guid("6bdc7a80-8bfa-4b8e-bbe4-0b5597279071"),
                            TagId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd6e")
                        },
                        new
                        {
                            ExerciseId = new Guid("6bdc7a80-8bfa-4b8e-bbe4-0b5597279071"),
                            TagId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd64")
                        },
                        new
                        {
                            ExerciseId = new Guid("6bdc7a80-8bfa-4b8e-bbe4-0b5597279071"),
                            TagId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd61")
                        },
                        new
                        {
                            ExerciseId = new Guid("7c9e6679-7425-40de-944b-e07fc1f90ae7"),
                            TagId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd66")
                        },
                        new
                        {
                            ExerciseId = new Guid("7c9e6679-7425-40de-944b-e07fc1f90ae7"),
                            TagId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd65")
                        },
                        new
                        {
                            ExerciseId = new Guid("7c9e6679-7425-40de-944b-e07fc1f90ae7"),
                            TagId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd6e")
                        },
                        new
                        {
                            ExerciseId = new Guid("7c9e6679-7425-40de-944b-e07fc1f90ae7"),
                            TagId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd64")
                        },
                        new
                        {
                            ExerciseId = new Guid("7c9e6679-7425-40de-944b-e07fc1f90ae7"),
                            TagId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd61")
                        });
                });

            modelBuilder.Entity("workoutTracker.Domain.Models.Application.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b3e3f65-ef2f-4646-b4d0-5f3e312bdd50"),
                            Name = "Lower Body"
                        },
                        new
                        {
                            Id = new Guid("8b3e3f65-ef2f-4646-b4d0-5f3e312bdd5f"),
                            Name = "Upper Body"
                        },
                        new
                        {
                            Id = new Guid("8b3e3f65-ef2f-4646-b4d0-5f3e312bdd51"),
                            Name = "Core"
                        },
                        new
                        {
                            Id = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd5f"),
                            Name = "Chest"
                        },
                        new
                        {
                            Id = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd63"),
                            Name = "Shoulders"
                        },
                        new
                        {
                            Id = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd61"),
                            Name = "Lower Back"
                        },
                        new
                        {
                            Id = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd65"),
                            Name = "Upper Arms"
                        },
                        new
                        {
                            Id = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd60"),
                            Name = "Forearms"
                        },
                        new
                        {
                            Id = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd64"),
                            Name = "Thighs"
                        },
                        new
                        {
                            Id = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd67"),
                            Name = "Abdominals"
                        },
                        new
                        {
                            Id = new Guid("25553f65-ef2f-4646-b4d0-5f3e312bdd5e"),
                            Name = "Calves"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd68"),
                            Name = "Pectorals"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd64"),
                            Name = "Front Delts"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd6b"),
                            Name = "Side Delts"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd6a"),
                            Name = "Rear Delts"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd6e"),
                            Name = "Spinal Erectors"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd5e"),
                            Name = "Biceps"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd6d"),
                            Name = "Triceps"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd62"),
                            Name = "Forearm Extensors"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd63"),
                            Name = "Forearm Flexors"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd69"),
                            Name = "Quadriceps"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd66"),
                            Name = "Hamstrings"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd65"),
                            Name = "Glutes"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd11"),
                            Name = "Adductors"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd6f"),
                            Name = "Rectus Abdominis"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd5f"),
                            Name = "Obliques"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd60"),
                            Name = "Calves Soleus"
                        },
                        new
                        {
                            Id = new Guid("752e3f65-ef2f-4646-b4d0-5f3e312bdd5f"),
                            Name = "Calves Gastroc"
                        },
                        new
                        {
                            Id = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd67"),
                            Name = "Lats"
                        });
                });

            modelBuilder.Entity("workoutTracker.Domain.Models.Application.TagChild", b =>
                {
                    b.Property<Guid>("ParentId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("TEXT");

                    b.HasKey("ParentId", "ChildId");

                    b.HasIndex("ChildId")
                        .IsUnique();

                    b.ToTable("TagChild");

                    b.HasData(
                        new
                        {
                            ParentId = new Guid("8b3e3f65-ef2f-4646-b4d0-5f3e312bdd50"),
                            ChildId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd64")
                        },
                        new
                        {
                            ParentId = new Guid("8b3e3f65-ef2f-4646-b4d0-5f3e312bdd50"),
                            ChildId = new Guid("25553f65-ef2f-4646-b4d0-5f3e312bdd5e")
                        },
                        new
                        {
                            ParentId = new Guid("8b3e3f65-ef2f-4646-b4d0-5f3e312bdd5f"),
                            ChildId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd5f")
                        },
                        new
                        {
                            ParentId = new Guid("8b3e3f65-ef2f-4646-b4d0-5f3e312bdd5f"),
                            ChildId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd63")
                        },
                        new
                        {
                            ParentId = new Guid("8b3e3f65-ef2f-4646-b4d0-5f3e312bdd5f"),
                            ChildId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd65")
                        },
                        new
                        {
                            ParentId = new Guid("8b3e3f65-ef2f-4646-b4d0-5f3e312bdd5f"),
                            ChildId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd60")
                        },
                        new
                        {
                            ParentId = new Guid("8b3e3f65-ef2f-4646-b4d0-5f3e312bdd51"),
                            ChildId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd61")
                        },
                        new
                        {
                            ParentId = new Guid("8b3e3f65-ef2f-4646-b4d0-5f3e312bdd51"),
                            ChildId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd67")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd5f"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd68")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd63"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd64")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd63"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd6b")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd63"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd6a")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd61"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd6e")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd65"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd5e")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd65"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd6d")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd60"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd62")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd60"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd63")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd64"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd69")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd64"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd66")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd64"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd65")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd64"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd11")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd67"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd6f")
                        },
                        new
                        {
                            ParentId = new Guid("2b3e3f65-ef2f-4646-b4d0-5f3e312bdd67"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd5f")
                        },
                        new
                        {
                            ParentId = new Guid("25553f65-ef2f-4646-b4d0-5f3e312bdd5e"),
                            ChildId = new Guid("7b3e3f65-ef2f-4646-b4d0-5f3e312bdd60")
                        },
                        new
                        {
                            ParentId = new Guid("25553f65-ef2f-4646-b4d0-5f3e312bdd5e"),
                            ChildId = new Guid("752e3f65-ef2f-4646-b4d0-5f3e312bdd5f")
                        });
                });

            modelBuilder.Entity("workoutTracker.Domain.Models.Application.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GoogleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b3e3f65-ef2f-4646-b4d0-5f3e312bdd5e"),
                            CreatedById = new Guid("5b3e3f65-ef2f-4646-b4d0-5f3e312bdd5e"),
                            CreatedOn = new DateTimeOffset(new DateTime(2025, 2, 16, 16, 43, 28, 578, DateTimeKind.Unspecified).AddTicks(233), new TimeSpan(0, 2, 0, 0, 0)),
                            Email = "",
                            GoogleId = "",
                            ModifiedById = new Guid("5b3e3f65-ef2f-4646-b4d0-5f3e312bdd5e"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2025, 2, 16, 16, 43, 28, 578, DateTimeKind.Unspecified).AddTicks(233), new TimeSpan(0, 2, 0, 0, 0)),
                            Name = "Automatic Process"
                        });
                });

            modelBuilder.Entity("workoutTracker.Domain.Models.Application.ExerciseTag", b =>
                {
                    b.HasOne("workoutTracker.Domain.Models.Application.Exercise", "Exercise")
                        .WithMany("ExerciseTags")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workoutTracker.Domain.Models.Application.Tag", "Tag")
                        .WithMany("ExerciseTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("workoutTracker.Domain.Models.Application.TagChild", b =>
                {
                    b.HasOne("workoutTracker.Domain.Models.Application.Tag", "Child")
                        .WithOne("TagParent")
                        .HasForeignKey("workoutTracker.Domain.Models.Application.TagChild", "ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workoutTracker.Domain.Models.Application.Tag", "Parent")
                        .WithMany("TagChildren")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("workoutTracker.Domain.Models.Application.Exercise", b =>
                {
                    b.Navigation("ExerciseTags");
                });

            modelBuilder.Entity("workoutTracker.Domain.Models.Application.Tag", b =>
                {
                    b.Navigation("ExerciseTags");

                    b.Navigation("TagChildren");

                    b.Navigation("TagParent")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
